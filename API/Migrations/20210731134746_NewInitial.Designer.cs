// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210731134746_NewInitial")]
    partial class NewInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("API.Entities.ColPhoto", b =>
                {
                    b.Property<int>("ColPhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AdminUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ColUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsStudentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMainAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainCol")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainHs")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ColPhotoId");

                    b.HasIndex("ColUserId");

                    b.ToTable("ColPhotos");
                });

            modelBuilder.Entity("API.Entities.ColUser", b =>
                {
                    b.Property<int>("ColUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AdminContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AverageAid")
                        .HasColumnType("int");

                    b.Property<string>("ClassYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ColUserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CollegeEnrollment")
                        .HasColumnType("int");

                    b.Property<string>("CollegeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeNickname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CollegeNum")
                        .HasColumnType("int");

                    b.Property<string>("CollegePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegePresident")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeVirtual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeYearFounded")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollegeZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("DreamJob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraCurricular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GradDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HsGradDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HsLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NetPay")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProposedMajor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomAndBoard")
                        .HasColumnType("int");

                    b.Property<int>("Tuition")
                        .HasColumnType("int");

                    b.HasKey("ColUserId");

                    b.ToTable("ColUsers");
                });

            modelBuilder.Entity("API.Entities.CollegeMajor", b =>
                {
                    b.Property<int>("CollegeNum")
                        .HasColumnType("int");

                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.HasKey("CollegeNum", "MajorId");

                    b.HasIndex("MajorId");

                    b.ToTable("CollegeMajors");
                });

            modelBuilder.Entity("API.Entities.FactFeature", b =>
                {
                    b.Property<int>("FactId")
                        .HasColumnType("int");

                    b.Property<int>("CollegeNum")
                        .HasColumnType("int");

                    b.Property<string>("FactBullet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FactId");

                    b.HasIndex("CollegeNum");

                    b.ToTable("FactFeatures");
                });

            modelBuilder.Entity("API.Entities.Major", b =>
                {
                    b.Property<int>("MajorId")
                        .HasColumnType("int");

                    b.Property<int>("MajorCatId")
                        .HasColumnType("int");

                    b.Property<string>("MajorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorId");

                    b.HasIndex("MajorCatId");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("API.Entities.MajorCat", b =>
                {
                    b.Property<int>("MajorCatId")
                        .HasColumnType("int");

                    b.Property<string>("MajorCatName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MajorCatId");

                    b.ToTable("MajorCats");
                });

            modelBuilder.Entity("API.Entities.ColPhoto", b =>
                {
                    b.HasOne("API.Entities.ColUser", "ColUser")
                        .WithMany("ColPhotos")
                        .HasForeignKey("ColUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColUser");
                });

            modelBuilder.Entity("API.Entities.CollegeMajor", b =>
                {
                    b.HasOne("API.Entities.ColUser", "ColUser")
                        .WithMany("CollegeMajors")
                        .HasForeignKey("CollegeNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.Major", "Major")
                        .WithMany("CollegeMajors")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColUser");

                    b.Navigation("Major");
                });

            modelBuilder.Entity("API.Entities.FactFeature", b =>
                {
                    b.HasOne("API.Entities.ColUser", "ColUser")
                        .WithMany("FactFeatures")
                        .HasForeignKey("CollegeNum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ColUser");
                });

            modelBuilder.Entity("API.Entities.Major", b =>
                {
                    b.HasOne("API.Entities.MajorCat", "MajorCat")
                        .WithMany("Majors")
                        .HasForeignKey("MajorCatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MajorCat");
                });

            modelBuilder.Entity("API.Entities.ColUser", b =>
                {
                    b.Navigation("CollegeMajors");

                    b.Navigation("ColPhotos");

                    b.Navigation("FactFeatures");
                });

            modelBuilder.Entity("API.Entities.Major", b =>
                {
                    b.Navigation("CollegeMajors");
                });

            modelBuilder.Entity("API.Entities.MajorCat", b =>
                {
                    b.Navigation("Majors");
                });
#pragma warning restore 612, 618
        }
    }
}
